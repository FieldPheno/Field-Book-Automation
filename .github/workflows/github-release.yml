on:
  push:
    branches:
      - main

name: do-github-release

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v2

      # Uses semantic commits to automate version bumping. No scope or "fix:" = PATCH, "feat:" = MINOR, "BREAKING CHANGE:" or fix/feat with appended "!" = MAJOR
      # Details here https://github.com/oflynned/android-version-bump#workflow and here https://www.conventionalcommits.org/en/v1.0.0/ (test)
      - name: Increment version
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          source version.properties
          MAJOR_VERSION_CHANGED=false
          MINOR_VERSION_CHANGED=false

          if [[ $COMMIT_MSG == *"BREAKING CHANGE"* || $COMMIT_MSG == *"!"* || $COMMIT_MSG == *"major:"* ]]; then
              ((majorVersion++))
              minorVersion=0
              patchVersion=0
              MAJOR_VERSION_CHANGED=true
          elif [[ $COMMIT_MSG == *"feat:"* || $COMMIT_MSG == *"minor:"* ]]; then
              ((minorVersion++))
              patchVersion=0
              MINOR_VERSION_CHANGED=true
          else
              ((patchVersion++))
          fi

          echo "majorVersion=$majorVersion" > version.properties
          echo "minorVersion=$minorVersion" >> version.properties
          echo "patchVersion=$patchVersion" >> version.properties
          echo "buildNumber=${{ github.run_number }}" >> version.properties
          VERSION=$majorVersion.$minorVersion.$patchVersion.$buildNumber
          RELEASE=$majorVersion.$minorVersion
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "RELEASE=$RELEASE" >> "$GITHUB_ENV"
          echo "MAJOR_VERSION_CHANGED=${MAJOR_VERSION_CHANGED}" >> $GITHUB_ENV
          echo "MINOR_VERSION_CHANGED=${MINOR_VERSION_CHANGED}" >> $GITHUB_ENV
          echo "The version is $VERSION and release is $RELEASE. Major version changes is $MAJOR_VERSION_CHANGED and minor is $MINOR_VERSION_CHANGED"

      - name: Commit version changes
        uses: EndBug/add-and-commit@v7
        with:
          add: 'version.properties'
          message: Bump version to v${ env.VERSION }
          author_email: 'git-action-bot@example.com'
          author_name: 'Git Action Bot'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build APK
        run: ./gradlew app:assembleRelease 

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload built APK
        uses: actions/upload-artifact@v2
        with:
          name: Signed APK
          path: app/build/outputs/

      # Updates the latest release if just a new patch, drafts a new prerelease if major or minor version has changed 
      - name: Make github release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: v${{ env.RELEASE }}
          tag: ${{ env.VERSION }}
          file: app/build/outputs/apk/release/app-release-unsigned-signed.apk
          asset_name: Field-Book-v${{ env.RELEASE }}.apk
          overwrite: ${{ env.MAJOR_VERSION_CHANGED == 'false' && env.MINOR_VERSION_CHANGED == 'false' }}
          prerelease: ${{ env.MAJOR_VERSION_CHANGED == 'true' || env.MINOR_VERSION_CHANGED == 'true' }}
    
